# some simple numeric functions

define add-one = (i64 n) -> {
    n + 1
}

type int = i64
(int -> int) inc = add-one

1 add-one add-one
inc 1 inc 2 inc +

define curried-add = (i64 a; i64 b) -> a + b
define curried-add2 = (i64 a) -> (i64 b) -> a + b
1 curried-add 2 curried-add 3
1 curried-add2 2 curried-add2 3

define diff-add = (i16 a; u32 b) -> a + b
3 diff-add 4

define dist = (f32 dx; f32 dy; f32 dz) -> {
    (dx * dx) + (dy * dy) + (dz * dz)
}
dist(1.0 2.0 3.0)

(int -> int) factorial = (0 -> 1) & (int n -> n - 1 factorial * n)
40 factorial 